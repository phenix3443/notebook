# -*- coding:utf-8-*-
#+TITLE: vscode-proto3
#+AUTHOR: liushangliang
#+EMAIL: phenix3443+github@gmail.com
* 概述
  [[https://github.com/zxh0/vscode-proto3][vscode-proto3]]  为 vscode 提供 protobuf 3 支持，主要功能：
  + 语法高亮。
  + 语法验证。

    保存 proto 文件时将触发验证。需要 protoc 编译器来启用语法验证，如果它不在路径中，还需要在 =settings.json= 文件中来将 protoc 的完整路径告知扩展。例如：
    #+BEGIN_SRC json
{
    "protoc": {
        "path": "/path/to/protoc",
        "compile_on_save": false,
        "options": [
            "--proto_path=protos/v3",
            "--proto_path=protos/v2",
            "--proto_path=${workspaceRoot}/proto",
            "--proto_path=${env.GOPATH}/src",
            "--java_out=gen/java"
        ]
    }
}
    #+END_SRC

    常用来 =--proto_path= ，指定 proto 文件的位置。具体字段参考主页。

  + 代码段。

    支持很多代码段。详见主页。

  + 代码补全。
  + 代码格式化。
    如果 clang-format 在路径中，则支持“Format Document”，包括自定义样式选项。默认情况下，将使用 clang-format 的标准编码样式进行格式化。要定义自定义样式或使用受支持的预设，请在 VSCode 设置（settings.json）中添加“ clang-format.style”
    #+BEGIN_SRC json
  "clang-format.style": "google"
    #+END_SRC

    等效于从 shell 执行 ~clang-format -style=google~

    使用多个格式化选项：

    #+BEGIN_SRC json
  "clang-format.style": "{ IndentWidth: 4, BasedOnStyle: google, AlignConsecutiveAssignments: true }"
    #+END_SRC

  + 大括号匹配。
  + 行/块注释。
  + 编译。

* 配置

  如果 protoc 不在路径中，需要编辑 settings.json 文件来告知扩展 protoc 的完整路径。

* 使用
