# -*- coding:utf-8-*-
#+TITLE: helm-projectile
#+AUTHOR: liushangliang
#+EMAIL: phenix3443+github@gmail.com

* 概述
  Projectile 可以与 Helm 集成，通过 helm-source-projectile-projects，helm-source-projectile-files-list，helm-source-projectile-buffers-list 和 helm-source-projectile-recentf-list（位于 helm-projectile.el）。 还有一个使用 Projectile 文件源调用 Helm 的示例函数。 可以这样调用它：
  #+BEGIN_EXAMPLE
M-x helm-projectile
  #+END_EXAMPLE

  更好的是调用键绑定 =C-c p h=。

* 安装
  安装 helm-projectile 的推荐方法是通过 package.el。

** package.el
   + MELPA
     You can install a snapshot version of helm-projectile from the MELPA repository. The version of Projectile there will always be up-to-date, but it might be unstable (albeit rarely).
   + MELPA Stable
     You can install the last stable version of helm-projectile from the MELPA Stable repository.

** el-get
   helm-projectile is also available for installation from the el-get package manager.

** Emacs Prelude
   helm-projectile is naturally part of the Emacs Prelude. If you're a Prelude user - helm-projectile is already properly configured and ready for action.

** Debian and Ubuntu
   Users of Debian 9 or later or Ubuntu 16.04 or later may apt-get install elpa-helm-projectile.

* 配置
  #+BEGIN_SRC elisp
(require 'helm-projectile)
(helm-projectile-on)
  #+END_SRC
* 使用
  对于那些喜欢 helm 胜过 ido 的人来说，helm-projectile-switch-project 可以用来代替 projectile-switch-project 切换项目。请注意，这与简单地将 projectile-completion-system 设置为 helm 不同，后者只是使 projectile 能够使用 Helm 完成来补全项目名称。使用 helm-projectile-switch-project 的好处是，在任何选定的项目中，可以触发许多动作，而不仅仅是 “切换到项目” 动作。目前，有五个操作：“切换到项目”，“在 Dired 打开项目目录”，“在 vc-dir 或 magit 中打开项目根目录”，“切换到 Eshell” 和 “Grep 项目文件”。将来会添加更多的行动。

  helm-projectile 能够打开多个文件。先使用 =C-SPC= 或 =M-a= 标记文件，然后按 RET，将打开所有选定的文件。

  请注意，helm grep 与 projectile-grep 不同，因为 helm grep 是增量的。要使用它，请选择您的项目（按 C-SPC 选择多个项目），按 “C-s”（或 “C-u C-s” 表示递归 grep），然后键入正则表达式。在 mini buffer 中键入正则表达式时，将以递增方式显示实时 grep 结果。

  helm-projectile 还提供常见 Projectile 命令的 Helm 版本。目前，这些是受支持的命令：
  + helm-projectile-switch-project
  + helm-projectile-find-file
  + helm-projectile-find-file-in-known-projects
  + helm-projectile-find-file-dwim
  + helm-projectile-find-dir
  + helm-projectile-recentf
  + helm-projectile-switch-to-buffer
  + helm-projectile-grep (can be used for both grep or ack)
  + helm-projectile-ag
  + helm-projectile-rg
  + Replace Helm equivalent commands in projectile-commander
  + A virtual directory manager that is unique to Helm Projectile


  与普通的 Projectile 命令相比，即使普通命令使用 helm 作为补全系统，为什么要使用这些命令？答案是，Helm 特定命令提供了更多有用的功能。例如，helm-projectile-switch-project 允许在 Dired，Magit 或 Eshell 中打开项目。helm-projectile-find-file 重用 helm-find-files 中的动作（有很多）并且能够打开多个文件。另一个原因是，在大型源树中，projectile 可能很慢，因为它必须打开所有可用的源。

  如果要使用这些命令，则必须将其激活以替换常规的 Projectile 命令：
  #+BEGIN_SRC elisp
;; (setq helm-projectile-fuzzy-match nil)
(require 'helm-projectile)
(helm-projectile-on)
  #+END_SRC

  如果你已经激活了 helm-projectile 键绑定，但不喜欢它，可以使用命令 helm-projectile-off 关闭它，而使用普通的 Projectile 绑定。同样，如果要在 Helm Projectile 中禁用模糊匹配（默认情况下启用），则必须在加载 helm-projectile 之前将 helm-projectile-fuzzy-match 设置为 nil。

  要完全学习 Helm Projectile 并了解它的功能，应该参考本指南：[[http://tuhdo.github.io/helm-projectile.html][使用 Projectile 和 Helm Projectile 探索大型项目]] 。

  显然你需要安装 Helm 才能工作。
