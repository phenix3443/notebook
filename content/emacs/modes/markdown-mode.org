# -*- coding:utf-8-*-
#+TITLE:markdown-mode
#+AUTHOR: liushangliang
#+EMAIL: phenix3443+github@gmail.com

* 概述
  [[https://jblevins.org/projects/markdown-mode/][markdown-mode]] 是 emacs 中编写 markdown 格式文本的 major mode。

* 配置

* 使用
  按键绑定根据其功能按前缀分组。例如，用于样式文本的命令被分组在 =C-c C-s= 下，而切换命令以 =C-c C-x= 开头。移动和移位命令往往与成对的定界符（例如 =M-{= 和  =M-}= 或 =C-c <= 和 =C-c >= ）相关联。大纲导航键绑定与在 Org-mode 相同。最后，用于运行 Markdown 或对打开的文件进行维护的命令被分组在 =C-c C-c= 前缀下。最常用的命令描述如下。您可以通过按 =C-c C-h= 获取所有键绑定的列表。

  + 链接和图像： =C-c C-1= 和  =C-c C-i=

    =C-c C-1 (markdown-insert-link)= 是用于插入新链接标记或编辑现有链接标记的通用命令。当启用标记或 URL 隐藏时，不容易直接编辑 URL，此功能特别有用。此命令可用于插入任何形式的链接：内联链接、参考链接或尖括号中的普通 URL。 URL 或[参考]标签、链接文本和可选标题通过一系列交互式提示输入。链接的类型取决于提供的值：
    + 如果同时提供了 URL 和链接文本，插入一个内联链接： =[text](url)= 。
    + 如果同时给出了[参考]标签和链接文本，请插入参考链接： =[text][reference]= 。
    + 如果仅给出链接文本，请插入隐式参考链接：=[text][]=。
    + 如果仅给出 URL，则插入纯 URL 链接： =<url>= 。

    同样， =C-c C-i (markdown-insert-image)= 是用于插入或编辑图像标记的通用命令。与链接插入命令一样，通过一系列交互式提示，可以插入嵌入式图像或参考图像：
    + 如果同时提供了 URL 和替代文本，请插入内嵌图像： =![替代文本](url)= 。
    + 如果同时给出了[reference]标签和替代文本，请插入参考链接： =![alt text][reference]= 。

    如果该点处已有链接或图像，则这些命令将编辑现有标记，而不是插入新标记。否则，如果存在活动区域​​​​，则这些命令将使用该区域作为默认 URL(如果它似乎是 URL)，否则将其用作链接文本值。在这种情况下，该区域将被删除并由链接替换。

    请注意，通过通过交互式提示有选择地添加或删除属性，可以使用这些功能将链接和图像从一种类型转换为另一种类型(内联，引用或纯 URL)。

    如果给定了尚未定义的参考标签，则将提示您输入 URL 和可选标题，并将根据 =markdown-reference-location= 的值插入参考。如果给出了标题，则将其添加到引用定义的末尾，并在转换为 HTML 时用于填充 title 属性。

    通过按 =C-c C-x C-i= 可以在缓冲区中内联显示与图像链接关联的图像( =markdown-toggle-inline-images= )。这是一个切换命令，因此再按一次将删除嵌入式图像。默认情况下，仅显示本地图像。但是，如果 markdown-display-remote-images 为非 nil，则也将下载并显示远程图像。

    可以使用 =markdown-max-image-size= 缩小大图像以适合缓冲区，该变量是格式为 =(max-width。max-height)= 的 cons 单元。调整大小要求 Emacs 带有 ImageMagick 支持。

  + 文本样式： =C-c C-s=

    =C-c C-s i= 插入标记以使区域或单词变为斜体。如果存在活动区域​​​​，则使该区域为斜体。如果该点指向非斜体 word，则将其设为斜体。如果该点位于斜体字或短语上，删除斜体标记。否则，只需插入斜体定界符并将 point 放在它们之间。同样， =C-c C-s b= 使用粗体， =C-c C-s c= 使用内联代码，使用 =C-c C-s k= 插入 =<kbd>= 标签。

    =C-c C-s q= 将活动区域(如果有)做为插入块引用，或开始新的块引用。 =C-c C-s Q= 是始终在区域上运行的变体，而不管其是否处于活动状态(例如，transient-mark-mode 关闭但标记已设置时)。适当的缩进量(如果有)会在给定周围环境的情况下自动计算，但可以稍后使用区域缩进命令进行调整。

    =C-c C-s p= 对于插入预格式化的代码块(=C-c C-s P= 是仅作用在区域上)的行为类似，并且 =C-c C-s C= 插入 GFM 样式反引号围栏代码块。

  + 标题：=C-c C-s=

    要插入或替换标题，有两个选项。您可以直接插入特定级别的标题，也可以让 markdown-mode 根据上一个标题为您确定级别。与其他标记命令一样，标题插入命令将活动区域中的文本(如果有)用作标题文本。否则，如果当前行不为空白，则他们将使用当前行上的文本。最后，如果没有活动区域并且当前行为空白，则 setext 命令将提示输入标题文本。

    =C-c C-s h= 自动选择类型和级别插入标题(均由上一个标题确定)。 =C-c C-s H= 的行为类似，但在可能的情况下使用 setext(带下划线的)标题，仍会自动计算级别。如果自动确定的级别不是您想要的级别，则可以快速升级或降级该级别(如下所述)。或者，可以使用 =C-u= 前缀插入一个级别提升了的标题(较低的数字)，或者可以给 =C-u C-u= 前缀插入一个级别降级的标题(较高的数字)。

    要插入特定级别和类型的标题，请使用 =C-c C-s 1= 至 =C-c C-s 6= 作为 atx(哈希标记)标题和 =C-c C-s!= 或 =C-c C-s @= 分别表示级别 1 或 2 的 setext 标题。注意 =!= 是 =S-1= ，=@= 是 =S-2= 。如果该点位于标题上，则这些命令将替换现有的标记，以便更新标题的级别/类型。要删除该点的标题标记，请按 =C-c C-k= 取消标题，然后按 =C-y= 将标题文本拉回到缓冲区中。

  + 水平线： =C-C C-s -=

    =C-c C-s -= 插入水平线。默认情况下，将使用列表 =markdown-hr-strings= 的第一个字符串(最突出的规则)插入。使用 C-u 前缀，插入列表的最后一个字符串。使用数字前缀 N，使用 N 个字符串差啊如(从 1 开始)。

  + 脚注： =C-c C-s f=

    =C-c C-s f= 在 point 处插入脚注标记，在下方插入脚注定义，然后将 point 定位以插入脚注文本。请注意，脚注是对 Markdown 的扩展，并非所有处理器都支持。

  + Wiki 链接： =C-c C-s w=

    =C-c C-s w= 插入格式为 =[[WikiLink]]= 的 Wiki 链接。如果存在活动区域​​​​，请将该区域用作链接文本。如果该点位于单词上，则将该单词用作链接文本。如果没有活动区域并且该点不在单词上，只需插入链接标记。请注意，Wiki 链接是 Markdown 的扩展，并非所有处理器都支持。

  + markdown 和维护命令： =C-c C-c=

    编译： =C-c C-c m= 将在当前缓冲区上运行 Markdown, 并在另一个缓冲区中显示输出。
    预览： =C-c C-c p= 在当前缓冲区上运行 Markdown 并进行预览，将输出存储在临时文件中，然后在浏览器中显示该文件。
    导出： =C-c C-c e= 将在当前缓冲区上运行 Markdown，并将结果保存在 =basename.html= 文件中，其中 =basename= 是 Markdown 文件的名称，其中扩展名已删除。
    导出和查看：按 =C-c C-c v= 导出文件并在浏览器中查看。
    打开： =C-c C-c o= 将使用 =markdown-open-command= 直接打开 Markdown 源文件。
    实时导出：按 =C-c C-c l= 打开 =markdown-live-preview-mode= ，以与源 Markdown 并排查看导出的输出。

    总结一下：
    + =C-c C-c m= ：markdown 命令 > =* markdown-output *= 缓冲区。
    + =C-c C-c p= ：markdown 命令 > 临时文件 > 浏览器。
    + =C-c C-c e= ：markdown-command > basename.html。
    + =C-c C-c v= ：markdown-command > basename.html > 浏览器。
    + =C-c C-c w= ：markdown-command > kill ring。
    + =C-c C-c o= ：markdown-open-command。
    + =C-c C-c l= ：markdown-live-preview-mode > =* eww * buffer= 。


    对于所有导出命令，输出文件将被覆盖，不另行通知。可以自定义 =markdown-live-preview-window-window= 功能以在 eww 以外的浏览器中打开。如果要强制预览窗口显示在底部或右侧，则可以自定义 =markdown-split-window-direction= 。

    =C-c C-c c= 将检查未定义的引用。如果有的话，将打开一个小的缓冲区，其中包含未定义引用的列表以及它们出现的行号。在 Emacs 22 及更高版本中，从此列表中选择一个引用并按 RET 将在缓冲区的末尾插入一个空的引用定义。同样，选择行号将跳到相应的行。

    =C-c C-c u= 将检查未使用的引用。如果找到任何缓冲区，这也会打开一个小的缓冲区，类似于未定义的引用检查。未使用引用的缓冲区将包含 X 按钮，这些按钮会在选中时删除未使用的引用。

    =C-c C-c n= 重新编号缓冲区中不按顺序的任何有序列表。 =C-c C-c ]= 完成所有标题并标准化缓冲区中的所有水平规则。

  + 打开链接： =C-c C-o=

    当点位于内联或参考链接上时，按 =C-c C-o= ，以在浏览器中打开 URL。当该点位于 Wiki 链接上时，在另一个缓冲区中将其打开(在当前窗口或使用 C-u 前缀在另一个窗口)。使用 =M-p= 和 =M-n= 快速跳至任何类型的上一个或下一个链接。


  + 执行： =C-c C-d=

    使用 =C-c C-d=  在此时对对象进行明智的处理：
    + 在参考链接和参考定义之间跳转。如果多个链接使用相同的参考标签，则会显示一个窗口，其中包含可单击的按钮，用于跳转到每个链接。在此窗口中，按 TAB 或 S-TAB 可以在按钮之间循环。
    + 在脚注标记和脚注文本之间跳转。
    + 切换 GFM 任务列表项(复选框)的完成状态。
    + 重新对齐表格列。

  + 升级和降级： ~C-c C--~ 和  ~C-c C-=~

    标题，水平线和列表项以及粗体和斜体文本都可以升级和降级。对于标题，“提升”表示降低等级(即，从<h2>移至<h1>)，而“降级”则表示提高级别。对于水平规则，升级和降级意味着在 =markdown-hr-strings=  中的规则字符串列表中前后移动。对于粗体和斜体文本，升级和降级意味着将标记从下划线更改为星号。如果可能，请按  ~C-c C--~ 或 =C-c LEFT= 键提升 point 的元素。

    要记住这些命令，请注意 =-= 用于降低级别(提升)，而 ~=~ (与相同的键)用于提高级别(降级)。同样，左右箭头键指示升级或降级时 atx 标题标记的移动方向。

  + 补全： =C-c C-]=

    采用规范化形式补全标记，例如，这意味着 setext 标头的下划线部分与标题文本的长度相同，或者 atx 标头的前导和尾随哈希标记的数量相等，并且存在标题文本中没有多余的空格。  =C-c C-]= 如果确定不完整，则在该点完成标记。

  + 编辑列表： =M-RET，C-c UP，C-c DOWN，C-c LEFT 和 C-c RIGHT=

    可以使用 =M-RET= 或 =C-c C-j= 插入新的列表项。此命令通过检查附近的列表项来确定适当的标记(可能的无序列表标记之一或有序列表的顺序中的下一个数字)和缩进级别。如果该点之前或之后没有列表，开始一个新列表。与标题插入一样，您可以在此命令前加上 =C-u= 来将缩进量减少一级。用 =C-u C-u= 前缀此命令可将缩进增加一级。

    现有列表项(及其嵌套子项)可以使用 =C-c UP= 或 =C-c DOWN= 上下移动，并使用 =C-c RIGHT= 或 =C-c LEFT= 缩进或缩进。

  + 编辑子树： =C-c UP，C-c DOWN，C-c LEFT 和 C-c RIGHT=

    可以使用 =C-c LEFT= 和 =C-c RIGHT= 来提升和降级 ATX 标题的整个子树，这与用于提升和降级列表项的键绑定相同。如果该点在列表项中，请对该列表进行操作。否则，它们将在当前的标题子树上运行。同样，子树可以通过 =C-c UP= 和 =C-c DOWN= 上下移动。如果受影响的区域中有 Setext 标题，则这些命令当前无法正常工作。请注意以下用于升级和降级的“边界”行为。任何第六级标题都不会被进一步降级(即，由于 Markdown 和 HTML 仅定义了六个级别，它们仍处于第六级)，并且任何一个第一级标题都将被完全提升(即，标题标记将被删除，因为零标题未定义)。

  + 移动区域： =C-c <=  和 =C-c >=

    可以使用 =C-c >= 缩进到下一个缩进点(在当前上下文中计算)，使用 =C-c <= 缩进到上一个缩进点，将区域中的文本缩进或缩进成组。这些键绑定与 python-mode 中类似命令的键绑定相同。

  + 删除元素： =C-c C-k=

    按  =C-c C-k= 可以删除该对象，然后将重要的文本(不带标记)添加到删除环。可被删除的事物包括(大致按优先顺序排列)：内联代码，标题，水平规则，链接(添加链接文本到 kill ring)，图像(添加替代文本到 kill ring)，URI，电子邮件地址，粗体，斜体，参考定义(添加 URI 到 kill rng)，脚注标记和文本(删除标记和文本，添加文本到 kill ring)以及列表项。

  + 大纲导航： =C-c C-n，C-c C-p，C-c C-f，C-c C-b 和 C-c C-u=

    这些键用于列表和标题中的分层导航。当该点在列表中时，它们将在列表项之间移动。否则，它们将在标题之间移动。使用 =C-c C-n= 和 =C-c C-p= 在下一个和上一个可见标题之间或任何级别的列表项之间移动。同样， =C-c C-f= 和 =C-c C-b= 将移动到与该点相同级别的下一个和上一个可见标题或列表项。最后，=C-c C-u= 将上移至父标题或列表项。

  + Markdown 段落的移动： =M-{， M-} 和 M-h=

    markdown 模式下的段落是正则段落，blockquotes 中的段落、单个列表项、标题等。这些键通常绑定到 =forward-paragraph= 和 =back-paragraph= ，但是内置的 Emacs 函数基于简单正则表达式，在 Markdown 文件中会失败。相反，它们必须绑定到 =markdown-forward-paragraph= 和 =markdown-backward-paragraph= 。要标记段落，可以使用 =M-h(markdown-mark-paragraph)= 。

  + 按 Markdown 块移动： =C-M-{，C-M-} 和 C-c M-h=

    Markdown 块在许多情况下是常规段落，但在其他情况下则包含许多段落：块被视为完整列表，整个代码块和整个块引用。要向后移动一个块，请使用 =C-M-{ (markdown-beginning-block)= ，向前移动可以使用 =C- M-} (markdown-end-of-block)= 。要标记一个块，请使用 =C-c M-h(markdown-mark-block)= 。

  + 按照函数移动： =C-M-a，C-M-e 和 C-M-h=

    常用的 Emacs 命令可用于通过 defun(顶级主要定义)移动。在 markdown 模式下，defun 是一个 section。像往常一样， =C-M-a= 会将点移动到当前或上一个 defun 的开头，=C-M-e= 将移动到当前或下一个 defun 的结尾， =C-M-h= 会标记整个 defun。

  + 表格编辑：

    markdown 模式包括对表格的支持，该表格具有以下基本格式：
    #+begin_example
| Right | Left | Center | Default |
|------:|:-----|:------:|---------|
|    12 | 12   | 12     | 12      |
|   123 | 123  | 123    | 123     |
|     1 | 1    | 1      | 1       |
    #+end_example

    第一行包含列标题。第二行在标题和内容之间包含分隔线。接下来的每一行都是表格中的一行。列始终由竖线字符分隔。冒号表示列对齐。

    每次您在表格中按 TAB 或 RET 键，表格都会自动重新对齐。 TAB 还将移至下一个字段(将 RET 移至下一行)，并在表的末尾或水平分隔线之前创建新的表行。表格的缩进由第一行设置。不支持 Emacs 内部的列居中。

    为了正确检测 Emacs 内部的表格边界，开始必须使用管道字符。任何以 =|-= 或 =|:= 开头的行都将被视为水平分隔线，并且在下一次重新对齐时会进行扩展以覆盖整个表格宽度。起始管道字符和标题分隔符之间不允许有填充。因此，要创建上表，您只需输入：
    #+begin_example
|Right|Left|Center|Default|
|-
    #+end_example

    然后按 TAB 对齐表格并开始填写单元格。

    然后，您可以使用 TAB 从一个单元格跳到下一个单元格，或者使用 S-TAB 跳到上一个单元格。 RET 将跳到同一列中的下一个单元格，如果没有这样的单元格，或者如果下一行超出分隔线，则创建一个新行。

    还可以将所选区域转换为表格。基本的编辑功能包括插入，删除和移动列和行，以及表重新对齐，排序和转置：
    + =C-c UP 或 C-c DOWN= 上下移动当前行。
    + =C-c LEFT 或 C-c RIGHT= 向左或向右移动当前列。
    + =C-c S-UP= 终止当前行。
    + =C-c S-DOWN=  在当前行上方插入一行。使用前缀参数，将在当前行下方创建行。
    + =C-c S-LEFT=  终止当前列。
    + =C-c S-RIGHT=  在当前列的左侧插入新列。
    + =C-c C-d=  重新对齐当前表格（markdown-do）。
    + =C-c C-c ^=  按指定的列对表的行进行排序。该命令提示您输入列号和排序方法（字母或数字，也可以反向）。
    + =C-c C-c |=  将区域转换为表格。此函数尝试识别逗号，制表符和空格分隔的数据，然后将数据相应地拆分为单元格。
    + =C-c C-c t=  点处的转换成表格。


    表编辑功能在计算列宽时会尝试正确处理标记隐藏，但是，包含隐藏标记的列可能并不总是正确对齐。

    =C-c C-s t（markdown-insert-table）= 是用于插入新表的一般命令。该命令提示输入表大小和列对齐，并在该点插入一个空管道表。


  + 查看模式：

    =markdown-view-mode= 和  =gfm-view-mode= 提供了只读查看模式查看 Markdown 内容。这些模式为导航缓冲区提供了简化的键绑定。其中许多类似帮助模式和视图模式，例如用于滚动的 =SPC，DEL，<和>= ，用于退出的 =q= 和 =?= 或 =h= 寻求帮助。编辑时提供了其他键映射大纲导航命令： =n，p，f，b 和 u= 。这两种模式默认情况下都启用标记隐藏，但是可以通过设置 =markdown-hide-markup-in-view-modes= 来自定义标记隐藏。

  + 杂项命令：
    安装了 =edit-indirect= 软件包后，可以使用 =C-c'(markdown-edit-code-block)= 在本机主模式下编辑间接缓冲区中的代码块。按 =C-c C-c= 提交更改并返回，或按  =C-c C-k= 取消。您也可以像在 C-u =C-c C-s= C 中一样，为插入命令提供一个前缀参数，以便在插入时在间接缓冲区中编辑代码块。


  如上所述，根据于是否启用了 Transient Mark mode，以上许多命令的行为都不同。如果启用了“Transient Mark mode”模式并且该区域处于活动状态，则命令将应用于该区域中的文本(例如， =C-c C-s b= 使该区域变为粗体)。对于喜欢在 Transient Mark mode 之外工作的用户，自 Emacs 22 起，可以通过按 =C-SPC C-SPC= 暂时启用它。如果不是这种情况，那么许多命令会继续查找该点处的单词或行。

  如果适用，即使在“Transient Mark mode”模式之外专门作用于该区域的命令也具有与标准命令相同的键绑定，但是字母为大写。例如， =markdown-insert-blockquote= 绑定到 =C-c C-s q= 并仅在瞬变标记模式下作用于该区域，而 =markdown-blockquote-region= 绑定到 =C-c C-s= Q 并始终应用于该区域(非空时)。

  请注意，这些特定于区域的功能在许多情况下很有用，但你不会发现。例如，从终止环中拉出文本会在拉出文本的开头设置标记，并将该点移到末尾。因此，(非活动)区域包含被选中的文本。因此， =C-y= 后跟 =C-c C-s Q= 将拉动文本并将其变成大括号。

   markdown-mode 尝试灵活地处理缩进。当反复按 TAB 时，pint 将在几个可能的缩进级别间循环，例如，您可能要开始一个新的列表项，继续一个带有挂起缩进的列表项，为嵌套的 pre 块缩进，等等。当在行的非空白部分的开头按退格键时，缩进处理类似。

   markdown-mode 支持 atx- 或 hash- 标题的大纲模式的可见性循环，这与 org-mode-style 莱斯。可见性循环有两种类型：在目录视图(仅标题)，大纲视图(仅顶层标题)和完整文档视图之间全局按 S-TAB 循环。当该点位于标题处时按 TAB 将在子树的可见性级别之间循环：完全折叠，可见的子代和完全可见。请注意，将哈希和下划线样式的标题混合使用会产生不希望的结果。
