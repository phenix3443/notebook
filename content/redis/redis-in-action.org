# -*- coding:utf-8 -*-
#+title:Redis in action
#+author: 刘尚亮
#+email:phenix3443@gmail.com

* 第一章 初识 redis
  + k/v 数据库。
  + 可以将数据持久化到硬盘。
  + 可以使用复制特性来扩展读性能。
  + 可以使用客户端分片来扩展写性能。

  文章得分的计算方式设计比较精妙。将文章的发表时间和投票得分结合在一起，常数因子 432 的定义精巧。

* 第二章 使用 redis 构建 web 应用
  即使经过优化，大多数关系数据库在每台数据库服务器上每秒也只能插入、更新或者删除 200~2000 个数据库行。

  统计浏览次数可以使用负数进行累加，这样方便排行，也是个技巧。

* 第三章 redis 命令
  支持的数据结构：
  + string
  + list
  + hash
  + set
  + order-set
  + pub/sub
  + transaction
  + script
  + geo
  + hyperloglog
  + stream

  在客户端断线时间，服务端发送的消息，客户端都会丢失。

* 第四章 数据安全与性能保障
  如果 redis 内存占用量高达十几个 G，并且剩余容量不多，执行 bgsave 可能会导致系统长时间停顿。

  虽然 save 会一直阻塞 redis 直到快照生成完成，但是因为它不需要创建子进程，所以就不会向 bgsave 一样因为创建子进程而导致停顿。

  事务型流水线：使用 pipline/watch/multi/exec 等命令构成。

  使用非事务型 pipeline 减少多个命令的网络消耗。

  redis-benchmark 命令判断 redis 性能，然后和实际性能作对比。

* 第五章 使用 redis 构建支持程序

* 第六章 使用 redis 构建应用程序组件
  使用 watch 实现的是乐观锁。

  使用 sexnx 实现锁，注意锁的力度。

  计数信号量

  任务队列

* 第七章 基于搜索的应用程序

* 第八章 构建简单社交网站

* 第九章 降低内存使用
  三种方法：
  + 短结构：压缩表，整数集合
  + 分片 结构
  + 打包存储二进制位

* 第十章 扩展 redis

* 第十一章 redis 的 Lua 脚本
