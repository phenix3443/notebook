# -*- coding:utf-8-*-
#+TITLE: 软件工程之美笔记
#+AUTHOR: liushangliang
#+EMAIL: phenix3443+github@gmail.com

本文是极客时间上 [[https://time.geekbang.org/column/158][《软件工程之美》]]学习笔记。


* 从软件工程角度解读任正非的新年公开信[fn:1]

  #+BEGIN_QUOTE
我们要转变观念，追求打造可信的高质量产品，不仅仅是功能、特性的高质量，也包括 *产品开发到交付过程的高质量* 。
  #+END_QUOTE

  软件项目管理金三角：时间、范围、成本三个要素直接决定了产品的质量。

** 程序员要求
   #+BEGIN_QUOTE
 *我们要从最基础的编码质量做起，视高质量代码为尊严和个人声誉。*
   #+END_QUOTE

   具体要求：
   1. 优化并遵循公司各种编程规范，遵从架构与设计原则，
   2. 熟练使用各种编程库和 API，编写出简洁、规范、可读性强、健壮安全的代码。

** 架构师要求
   #+BEGIN_QUOTE
 我们要 *深刻理解架构的核心要素，基于可信导向来进行架构与设计* 。
   #+END_QUOTE
   具体要求：
   1. 在确保可信的前提下，要在性能、功能、扩展性等方面做好 *权衡* ；
   2. 慎重地定义我们的 *模块与接口，真正做到高内聚与低耦合* ；
   3. 我们要遵循权限和攻击面最小化等安全设计原则， *科学设计模块之间的隔离与接口，提升安全性* ；
   4. 低阶架构与设计要遵循高阶的架构与设计原则，在充分理解原有架构与设计的情况下， *持续优化* ；
   5. 我们要 *熟悉各种设计模式，重用公共成熟组件和服务，避免重复劳动* 。

** 技术债务
   #+BEGIN_QUOTE
*我们要重构腐化的架构及不符合软件工程规范和质量要求的历史代码。*
   #+END_QUOTE

** 安全性
   #+BEGIN_QUOTE
我们要深入钻研软件技术，尤其是安全技术。
   #+END_QUOTE
   1. 软件技术是我们打造产品的基本工具，技术是否先进，技术选择是否合理，将决定我们软件的高度；
   2. 我们要深入学习架构与设计、编码、测试、安全、可用性、性能、维护性、体验等技术，并科学运用这些技术。

** 一致性
   #+BEGIN_QUOTE
我们要遵守过程的一致性。
   #+END_QUOTE

   1. 遵守适用的法律法规、遵循业界共识的标准、规范。
   2. 确保规范到实现的一致性、代码到二进制的一致性。

** 习惯
   #+BEGIN_QUOTE
为此，我们要改变行为习惯，追求精品。
   #+END_QUOTE

   1. 我们要开放透明、积极和勇于揭示问题并主动推动改进。
   2. 我们要改变只重视功能结果、不重视代码质量的行为习惯，要严格遵守软件工程规范；改变被动的修修补补；
   3. 改变碎片化知识获取，主动去学习提升并贡献经验、代码，形成共享知识库。

** 制度
   #+BEGIN_QUOTE
将通过变革形成一套适应上述变化的流程、组织与考核机制。
   #+END_QUOTE

   1. 我们要完善并增强透明、可回溯和可审计的全流程管理机制，以可信的视角，从初始设计、完整构建到产品生命周期管理，全面提升软件工程能力和实践。
   2. 我们将全面强化以 Committer 角色为核心的代码审核和提交机制，代码经过更加严格和系统的审核才能合入版本。为此我们将建立一支更高水平的 Committer 角色群体，负责软件架构的看护、代码的审核和提交，整体保障合入代码的高质量。
   3. 我们要变革考核机制，要让架构设计好、代码写得好的人脱颖而出，对编程能力不满足要求的人给予帮助和培训。


* 什么是软件工程
  + 从“软件危机”到软件工程。
  + 软件工程：将系统化的、规范的、可度量的工程方法用于软件开发中。
  + 软件生命周期：需求分析、架构设计、编码实现、测试、交付部署、维护。
  + 软件工程的知识基于软件生命周期。

* 为什么应该学好软件工程
+ 梳理学过的理论知识，使其更加系统，查漏补缺。
+ 学习软件开发各阶段的业界最佳实践。
+ 理论指导实践，提高工作中的开发效率和软件质量。
+ 了解核心思想、本质规律，加强自身核心竞争力。

* 怎样学好软件工程

** 知识结构
   + 质量：构建和维护高质量的软件。
   + 过程：软件开发步骤。两种过程模型：
     + 瀑布模型
     + 敏捷开发
   + 方法：各步骤的具体实践方法，例如如何分析用户需求，如何架构设计，如何验收测试。是具体的方法论。
   + 工具：辅助方法的各种软件工具。

   #+CAPTION:软件工程知识思维导图
   [[~/github/notebook/org/img/se-beauty/se-map.png]]

** 如何学习
   目标：聚焦质量，了解过程，掌握方法，使用工具。

   不同的学习阶段：器，术，道。

   做中学和教中学相结合，分三个阶段：
   + “教中学”指导实践，避免走弯路。
   + “做中学”中加深对“道”和“术”的理解。
   + “传道”通过培训和分享继续加深理解和修正错误。


   软件工程既然是工程，就要求开发人员具有：
   + 工程思维：抽象思维、模块思维等。
   + 工程意识：质量意识、风险意识、交付意识等。

* Footnotes

[fn:1] [[https://finance.sina.cn/chanjing/gsxw/2019-01-03/detail-ihqhqcis2592397.d.html?vt=4&pos=17][全面提升软件工程能力与实践，打造可信的高质量产品]]
