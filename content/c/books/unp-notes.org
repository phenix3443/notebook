# -*- coding:utf-8-*-
#+TITLE: 《Unix 网络编程》笔记
#+AUTHOR: liushangliang
#+EMAIL: phenix3443+github@gmail.com
#+STARTUP: overview
#+OPTIONS: author:nil date:nil creator:nil timestamp:nil validate:nil num:nil


L11：线程函数遇到错误时并不设置标准 Unix 的 error 变量，而是把 errno 的值作为函数返回值返回调用者。
L13: INADDR_ANY 的使用。
L14：必须小心使用 sprintf、gets、strcat、strcpy，使用 snprintf、fgets、strlcat、strlcpy 替代。
L17：网络应用绕过传输层直接使用 IPv4 和 IPv6 是可能的，这就是所谓的原始套接字。
L25：套接字 API 对套接字地址结构的长度使用了 socklen_t 数据类型。不使用 size_t 是为了避免 32 和 64 位系统转换。

L26：SCTP 与 TCP 类似之处在于它也是一个可靠的传输控制协议，但是他还提供消息边界、传输级别多宿支持以及将头端阻塞减少到最小的一种方法。
L30：TCP 含有用于动态估算客户和服务器之间的往返时间（RTT）的算法，以便它知道等待一个确认需要多少时间。
L31：UDP 可以是全双工的。
L32：SYN 占据一个字节的序列号空间。
L36：捎带 ack 通常在服务器处理请求并产生应答的时间少于 200ms 时产生。
L37：
MSL 最长分节生命期，是任何 IP 数据包能够在因特网上存活的最长时间。
TIME_WAIT 状态有两个存在的理由：1）可靠地实现 TCP 全双工连接的终止。2）允许老的重复分解在网络中消逝。
L44：在服务器主机上区分监听套接字和已连接套接字。已连接套接字使用与监听套接字相同的本地端口。还要注意在多宿主服务器主机上，连接一旦建立，已连接套接字的本地地址随即填入。
L46：影响 IP 数据报大小的限制：

L56：套接字地址结构会在内核与进程间传递。
L57：所有的套接字地址结构大小至少都是 16 字节。
L58：32 位 IPv4 地址存在两种不同的访问方法。
L59：从应用程序开发人员的观点看，这些通用套接字地址结构的唯一用途就是对只想特定于协议的套接字地址结构的指针执行强制类型转换。
L62：sock api 中传递值结果参数的作用。
