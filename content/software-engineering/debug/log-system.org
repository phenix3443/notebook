# -*- coding:utf-8-*-
#+TITLE: 日志系统
#+AUTHOR: liushangliang
#+EMAIL: phenix3443+github@gmail.com

* 概述
  通过日志可以：
  1. 了解线上系统的运行状态
  2. 快速准确定位线上问题
  3. 发现系统瓶颈
  4. 预警系统潜在风险
  5. 挖掘产品最大价值
  6. ……

* 分类
  日志从功能来说，可以分为：
  + 诊断日志：调试代码、追踪问题，输出到控制台。
  + 统计日志：统计请求、数据埋点，格式化输出，方便进一步数据处理。

* 原则
  + 日志打印不能阻塞业务流程。
  + 不同功能或类型的日志输出到不同文件。
  + 日子文件按时间进行分割，方便定位问题。
  + 日志中的信息量应该合理，不多不少。
  + 日志需要不断优化。
  + 请求处理流程应该使用 RequestID 串起来。
  + 日志格式应该统一规范。

* 数据
  下面这些数据应该打印：
  + 服务启动参数，初始化流程。
  + 代码异常处理逻辑。
  + 请求和响应都应该打印，方便出问题的时候还原场景。

* tip
  + 日志组件支持动态修改日志级别，方便线上调试 bug。例如可以当特定 userid，或参数中携带 ~debug=on~ 这样的参数时，就将日志级别修改为 =debug= ，打印更加详细的信息。
  + 日志分割可以借助第三方工具来实现，并不一定需要日志组件支持。
  + 分布式日志可以对接 ELK 等系统，方便汇总处理，形成图表。
  + 使用格式化字符串拼装日志信息，不要使用字符串拼接。
