# -*- coding:utf-8 -*-
#+title:软件调试的艺术读书笔记
#+author:刘尚亮
#+email:phenix3443@gmail.com

* 第一章 预备知识
  + 调试原则：
	+ 确认的基本原则。
	+ 从简单工作开始调试。
	+ 使用自顶向下的方法。也就是说，调试到函数时候，先通过返回值等确定函数是否执行正确，不要着急进入函数进行单步调试浪费时间。
	+ 使用调试工具确定段错误的位置。
	+ 通过发出中断确定无限循环的位置。
	+ 使用二分搜索。
  + 调试命令：
	+ 断点：
	  + break，clear,delete,disable,enable,enable once, info break, 。
	  + tbreak
	  + next,step,continue,finish，until

	+ 打印：
	  + print，list
	  + watch
	  + backtrace，frame

	+ 帮助：
	  + help breakpoints

  + 图形界面:
	+ 使用 TUI 模式
	  #+BEGIN_SRC
	  gdb -tui
	#+END_SRC
	  或者在 TUI 模式的 GDB 中使用 Ctrl+X+A 进入。

	+ 使用 CGDB。

  + 启动文件 .gdbinit。

* 第二章 停下来环顾程序

  + 暂停机制：断点，监视点，捕获点。
  + 同一行代码上的多个断点只会中断一次，触发中断的断点将是标识符编号最小的断点。
  + 使用断点命令列表在每次执行到某个断点时候自动执行一组命令。
  + 调试命令：
	+ commands，silent，define
	+ define 使用要不停的按下回车才能不断的调用？参见第二章 fibonacci 例子。
  + 监视点只能监视存在且在作用域内的变量。一旦变量不再存在于调用栈的任何帧中，GDB 会自动删除监视点。

* 第三章 检查和设置变量
  + 调试命令：
	+ disp, commands, call
	+ *pointer@number_of_elements
	+ ptype
	+ info locals
	+ x
	+ set

* 第四章 程序崩溃处理
  + 内存布局：
	+ 文本区（.text）
	+ 数据区，包含在 *编译时* 分配的所有程序变量，即全局变量。
	  + .data，
	  + .bss，存放未经初始化的变量。
	+ 操作系统不会将不完整的页分配给程序。页是虚拟内存系统能够操作的最小内存单元。这一点暗示了程序的一些错误内存访问不会触发段错误。
	+ 当运行程序时，操作系统创建一个用来管理执行程序代码进程的虚拟内存页表。当进程运行时，硬件的页表寄存器都会指向该表。进程虚拟空间的每个页在页表中都有一个页表项。页表项存储与该页相关的各种信息。与段错误相关的是数据该页的访问权限。
	+ 段错误设计访问不具备足够权限的内存。总线错误是提供给处理器的是无效地址。

* 第五章 多活动上下文中的调试
  + gdb 中手工执行 connect 调用时，必须去掉类型强制转换。
  + 使用 strace 跟踪程序做过的系统调用。
  + 在 RUN 状态中并不表示进程实际在 CPU 上执行；相反，这仅意味着它准备运行，即有资格获得处理器的时间片。
  + 调试命令：
	+ info threads
	+ thread 3
	+ break 88 thread 3
  + 链接库的命令（-lpthread）要放在编译文件后面。
  + 通过在代码中建立无限循环设置断点。

* 第六章 特殊主题

* 第七章 其他工具
  + strace 用来查看系统函数调用。 -s N 选项强制截短字符，使用-0 LOG ff 切换子进程。
  + ltrace 用来查看库函数调用。
  + mtrace()
